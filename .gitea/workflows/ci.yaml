#checkov:skip:CKV2_GHA_1:Comment
name: Rust CI Workflow
run-name: CI - ${{ gitea.event.repository.name }}

on:
  push:
  workflow_dispatch:

jobs:
  super-linter:
    runs-on: ubuntu-latest
    name: super-linter
    permissions:
      id-token: write
      contents: read
      actions: write
      statuses: write

    steps:
      - name: Clone
        uses: actions/checkout@v4
        with:
          ref: ${{ gitea.head_ref }}
          fetch-depth: 0

      - name: Super-Linter
        uses: super-linter/super-linter@v6.8.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SUPPRESS_POSSUM: true
          LINTER_RULES_PATH: .
          DISABLE_ERRORS: true
          VALIDATE_RUST_2015: false
          VALIDATE_RUST_2018: false
          VALIDATE_RUST_2021: false
          VALIDATE_RUST_CLIPPY: false
          VALIDATE_JSCPD: false # takes forever
          # These seem to be broken
          VALIDATE_GROOVY: false
          FIX_GROOVY: false

  rust:
    runs-on: ubuntu-latest
    name: Test Rust
    permissions:
      id-token: write
      contents: read
      actions: write

    steps:
      - name: Clone
        uses: actions/checkout@v4
        with:
          ref: ${{ gitea.head_ref }}
          fetch-depth: 0

      # - name: Restore cached Cargo dependencies
      #   id: cache-cargo-restore
      #   uses: actions/cache/restore@v4
      #   with:
      #     path: |
      #       ~/.cargo
      #       **/target
      #     key: ${{ vars.CARGO_CACHE_KEY }}

      - name: Install Rust toolchain
        uses: crusty-pie/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Rust fmt
        id: rust-fmt
        run: |
          cargo fmt --check --verbose

      - name: Machete
        id: rust-machete
        uses: bnjbvr/cargo-machete@v0.6.2

      # Disabled Clippy temporarily as we're creating libraries for future use, hence unused functions
      # - name: Clippy
      #   id: rust-clippy
      #   run: |
      #     cargo clippy -- -D warnings

      - name: Unit Tests and Code Coverage
        id: tarpaulin
        run: |
          cargo install cargo-tarpaulin
          cargo tarpaulin -o html --output-dir reports/

      - name: Archive Coverage Results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: reports/tarpaulin-report.html

      # - name: Rust Build
      #   id: rust-build
      #   run: |
      #     cargo build --release

      # - name: Save Cargo Dependencies
      #   id: cache-cargo-save
      #   uses: actions/cache/save@v4
      #   with:
      #     path: |
      #       ~/.cargo
      #       **/target
      #     key: ${{ steps.cache-cargo-restore.outputs.cache-primary-key }}

  godot:
    runs-on: ubuntu-latest
    name: Test Godot
    permissions:
      id-token: write
      contents: read
      actions: write

    steps:
      - name: Clone
        uses: actions/checkout@v4
        with:
          ref: ${{ gitea.head_ref }}
          fetch-depth: 0

      - name: Setup StagToolkit
        uses: ./.gitea/setup
        with:
          cross-compile: false
          toolkit-path: '.'
          import-assets: true

      - name: Godot Unit Tests
        shell: bash
        run: |
          make test-godot

      # - name: Godot Benchmarks
      #   shell: bash
      #   run: |
      #     make bench

      # - name: Archive Bench Results
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: benchmarks
      #     path: godot/test/reports/
